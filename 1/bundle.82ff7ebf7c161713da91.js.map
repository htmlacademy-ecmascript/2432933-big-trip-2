{"version":3,"file":"bundle.82ff7ebf7c161713da91.js","mappings":"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","sources":["webpack://big-trip/./src/const.js","webpack://big-trip/./src/render.js","webpack://big-trip/./src/view/trip-events-item.js","webpack://big-trip/./src/view/trip-events-list.js","webpack://big-trip/./src/view/edit-form-view.js","webpack://big-trip/./src/view/point-sort.js","webpack://big-trip/./src/view/point-filters.js","webpack://big-trip/./src/mock/mock-point-data.js","webpack://big-trip/./src/mock/mock-offers-data.js","webpack://big-trip/./src/mock/mock-destinations-data.js","webpack://big-trip/./src/main.js","webpack://big-trip/./src/model/event-model.js","webpack://big-trip/./src/presenter/trip-presenter.js"],"sourcesContent":["\nconst POINT_TYPES = ['Taxi', 'Bus', 'Train', 'Ship', 'Drive', 'Flight', 'Check-in', 'Sightseeing', 'Restaurant'];\n\nconst CITIES = ['Amsterdam', 'Geneva', 'Chamonix', 'Moscow'];\n\nconst eventsContainerElement = document.querySelector('.trip-events');\nconst tripControlsElement = document.querySelector('.trip-main__trip-controls');\n\nexport {POINT_TYPES, CITIES, eventsContainerElement, tripControlsElement};\n\n\n","const RenderPosition = {\n  BEFOREBEGIN: 'beforebegin',\n  AFTERBEGIN: 'afterbegin',\n  BEFOREEND: 'beforeend',\n  AFTEREND: 'afterend',\n};\n\nfunction createElement(template) {\n  const newElement = document.createElement('div');\n  newElement.innerHTML = template;\n\n  return newElement.firstElementChild;\n}\n\nfunction render(component, container, place = RenderPosition.BEFOREEND) {\n  container.insertAdjacentElement(place, component.getElement());\n}\n\n\nexport default class BaseView {\n\n  getElement() {\n    if (!this.element) {\n      this.element = createElement(this.template);\n\n    }\n    return this.element;\n  }\n}\n\nexport {RenderPosition, createElement, render};\n","import BaseView from '../render';\n\nconst renderOffer = (offer) => {\n  const { title, price} = offer;\n  return `<li class=\"event__offer\">\n                <span class=\"event__offer-title\">${title}</span> &plus;&euro;&nbsp;\n                <span class=\"event__offer-price\">${price}</span>\n              </li>`;\n};\n\nconst createOffersTemplate = (mockPoint, mockOffers) => {\n  const pointTypeOffer = mockOffers.find((offer) => offer.type === mockPoint.type) || { offers: [] };\n  const pointeOfferKey = new Set(mockPoint.offers);\n\n  return pointTypeOffer.offers\n    .filter((offer) => pointeOfferKey.has(offer.id))\n    .map((offer) => renderOffer(offer))\n    .join('');\n};\n\nconst createRoutePoint = (point, offers) =>{\n  const { type, basePrice, isFavorite } = point;\n  //console.log(point);\n\n  const favoriteClassName = isFavorite ? 'event__favorite-btn--active' : '';\n  const offersItem = createOffersTemplate(point, offers);\n\n  return (\n    `<li class=\"trip-events__item\">\n              <div class=\"event\">\n                <time class=\"event__date\" datetime=\"2019-03-18\">MAR 18</time>\n                <div class=\"event__type\">\n                  <img class=\"event__type-icon\" width=\"42\" height=\"42\" src=\"img/icons/${type}.png\" alt=\"Event type icon\">\n                </div>\n                <h3 class=\"event__title\">${type} Chamonix</h3>\n                <div class=\"event__schedule\">\n                  <p class=\"event__time\">\n                    <time class=\"event__start-time\" datetime=\"2019-03-18T14:30\">14:30</time>\n                    &mdash;\n                    <time class=\"event__end-time\" datetime=\"2019-03-18T16:05\">16:05</time>\n                  </p>\n                  <p class=\"event__duration\">01H 35M</p>\n                </div>\n                <p class=\"event__price\">\n                  &euro;&nbsp;<span class=\"event__price-value\">${basePrice}</span>\n                </p>\n                <h4 class=\"visually-hidden\">Offers:</h4>\n                <ul class=\"event__selected-offers\">\n                     ${offersItem}\n                </ul>\n                <button class=\"event__favorite-btn  ${favoriteClassName}\" type=\"button\">\n                  <span class=\"visually-hidden\">Add to favorite</span>\n                  <svg class=\"event__favorite-icon\" width=\"28\" height=\"28\" viewBox=\"0 0 28 28\">\n                    <path d=\"M14 21l-8.22899 4.3262 1.57159-9.1631L.685209 9.67376 9.8855 8.33688 14 0l4.1145 8.33688 9.2003 1.33688-6.6574 6.48934 1.5716 9.1631L14 21z\"/>\n                  </svg>\n                </button>\n                <button class=\"event__rollup-btn\" type=\"button\">\n                  <span class=\"visually-hidden\">Open event</span>\n                </button>\n              </div>\n            </li>`\n  );\n\n};\n\n\nexport default class EventItemView extends BaseView {\n  constructor({ point, offers}) {\n    super();\n    this.point = point;\n    this.offers = offers;\n  }\n\n  get template() {\n  // console.log(this.point);\n\n    return createRoutePoint(this.point, this.offers);\n  }\n}\n\n\n","import BaseView from '../render';\n\nconst createTripEventListTemplate = () => '<ul class=\"trip-events__list\"></ul>';\n\n\nexport default class EventListView extends BaseView{\n  get template() {\n    return createTripEventListTemplate();\n  }\n\n}\n","import BaseView from '../render';\nimport { POINT_TYPES, CITIES } from '../const';\n\nconst createAddPointTypePointTemplate = () => POINT_TYPES.map((type)=> `<div class=\"event__type-item\">\n<input id=\"event-type-${type}-1\" class=\"event__type-input  visually-hidden\" type=\"radio\" name=\"event-type\" value=\"${type}\">\n<label class=\"event__type-label  event__type-label--${type}\" for=\"event-type-${type}-1\">${type}</label>\n</div> `).join('');\n\nconst createCitie = () => CITIES.map((citie) => `<option value=\"${citie}\"></option>`).join('');\n\nconst renderOfferEdit = (mockPoint, mockOffers) => {\n  const { offers } = mockOffers;\n  return `\n      <section class=\"event__section event__section--offers\">\n          <h3 class=\"event__section-title event__section-title--offers\">Offers</h3>\n\n          <div class=\"event__available-offers\">\n              ${offers.map((offer) => `\n                <div class=\"event__offer-selector\">\n        <input class=\"event__offer-checkbox visually-hidden\" id=\"offer-${offer.id}\" type=\"checkbox\" name=\"event-offer-${offer.id}\"\n        ${mockPoint.offers.includes(offer.id) ? 'checked' : ''}>\n                    <label class=\"event__offer-label\" for=\"offer-${offer.id}\">\n                        <span class=\"event__offer-title\">${offer.title}</span>\n                        &plus;&euro;&nbsp;\n                        <span class=\"event__offer-price\">${offer.price}</span>\n                    </label>\n                </div>`\n  ).join('')}\n         </div>\n        </section>\n      `;\n};\nconst createEditOffersTemplate = (mockPoint, mockOffers) => {\n  const pointTypeOffer = mockOffers.find((offer) => offer.type === mockPoint.type);\n  return pointTypeOffer ? renderOfferEdit(mockPoint, pointTypeOffer) : '';\n};\n\n\nconst renderDescription = (mockDestinations) => {\n  const { description, pictures } = mockDestinations;\n\n  return `\n  <section class=\"event__section  event__section--destination\">\n      <h3 class=\"event__section-title  event__section-title--destination\">Destination</h3>\n      <p class=\"event__destination-description\">${description}</p>\n      <div class=\"event__photos-container\">\n          <div class=\"event__photos-tape\">\n              ${pictures.map((picture) => `\n                  <img class=\"event__photo\" src=\"${picture.src}\" alt=\"${picture.description}\">\n              `).join('')}\n          </div>\n      </div>\n  </section>`;\n};\n\nconst createEditDestinationsTemplate = (mockPoint, mockDestinations) => {\n  const pointTypeOffer = mockDestinations.find((destination) => destination.id === mockPoint.destination);\n  return pointTypeOffer ? renderDescription(pointTypeOffer) : '';\n};\n\n\nconst editPoint = (point, offers, destinations) => {\n  const { type, basePrice } = point;\n  const eventTypeItem = createAddPointTypePointTemplate();\n  const citie = createCitie();\n  const offerComponent = createEditOffersTemplate(point, offers);\n  const destinationComponent = createEditDestinationsTemplate(point, destinations);\n\n\n  return (`\n  <li class=\"trip-events__item\">\n<form class=\"event event--edit\" action=\"#\" method=\"post\">\n  <header class=\"event__header\">\n    <div class=\"event__type-wrapper\">\n      <label class=\"event__type  event__type-btn\" for=\"event-type-toggle-1\">\n        <span class=\"visually-hidden\">Choose event type</span>\n        <img class=\"event__type-icon\" width=\"17\" height=\"17\" src=\"img/icons/${type}.png\" alt=\"Event type icon\">\n      </label>\n      <input class=\"event__type-toggle  visually-hidden\" id=\"event-type-toggle-1\" type=\"checkbox\">\n\n      <div class=\"event__type-list\">\n        <fieldset class=\"event__type-group\">\n          <legend class=\"visually-hidden\">Event type</legend>\n          ${eventTypeItem}\n\n        </fieldset>\n      </div>\n    </div>\n\n    <div class=\"event__field-group  event__field-group--destination\">\n      <label class=\"event__label  event__type-output\" for=\"event-destination-1\">\n          ${type}\n      </label>\n      <input class=\"event__input  event__input--destination\" id=\"event-destination-1\" type=\"text\" name=\"event-destination\" value=\"Chamonix\" list=\"destination-list-1\">\n      <datalist id=\"destination-list-1\">\n        ${citie}\n       </datalist>\n    </div>\n\n    <div class=\"event__field-group  event__field-group--time\">\n      <label class=\"visually-hidden\" for=\"event-start-time-1\">From</label>\n      <input class=\"event__input  event__input--time\" id=\"event-start-time-1\" type=\"text\" name=\"event-start-time\" value=\"18/03/19 12:25\">\n      &mdash;\n      <label class=\"visually-hidden\" for=\"event-end-time-1\">To</label>\n      <input class=\"event__input  event__input--time\" id=\"event-end-time-1\" type=\"text\" name=\"event-end-time\" value=\"18/03/19 13:35\">\n    </div>\n\n    <div class=\"event__field-group  event__field-group--price\">\n      <label class=\"event__label\" for=\"event-price-1\">\n        <span class=\"visually-hidden\">Price</span>\n        &euro;\n      </label>\n      <input class=\"event__input  event__input--price\" id=\"event-price-1\" type=\"text\" name=\"event-price\" value=\"${basePrice}\">\n    </div>\n\n    <button class=\"event__save-btn  btn  btn--blue\" type=\"submit\">Save</button>\n    <button class=\"event__reset-btn\" type=\"reset\">Delete</button>\n    <button class=\"event__rollup-btn\" type=\"button\">\n      <span class=\"visually-hidden\">Open event</span>\n    </button>\n  </header>\n  <section class=\"event__details\">\n      ${offerComponent}\n     ${destinationComponent}\n  </section>\n</form>\n</li>\n  `);\n};\n\n\nexport default class EditPointView extends BaseView{\n  constructor({ point, offers, destinations}){\n    super();\n    this.point = point;\n    this.offers = offers;\n    this.destinations = destinations;\n  }\n\n  get template() {\n    return editPoint(this.point, this.offers, this.destinations);\n  }\n}\n\n\n","import BaseView from '../render';\n\nconst createSortPointTemplate = () => `<form class=\"trip-events__trip-sort  trip-sort\" action=\"#\" method=\"get\">\n            <div class=\"trip-sort__item  trip-sort__item--day\">\n              <input id=\"sort-day\" class=\"trip-sort__input  visually-hidden\" type=\"radio\" name=\"trip-sort\" value=\"sort-day\">\n              <label class=\"trip-sort__btn\" for=\"sort-day\">Day</label>\n            </div>\n\n            <div class=\"trip-sort__item  trip-sort__item--event\">\n              <input id=\"sort-event\" class=\"trip-sort__input  visually-hidden\" type=\"radio\" name=\"trip-sort\" value=\"sort-event\" disabled>\n              <label class=\"trip-sort__btn\" for=\"sort-event\">Event</label>\n            </div>\n\n            <div class=\"trip-sort__item  trip-sort__item--time\">\n              <input id=\"sort-time\" class=\"trip-sort__input  visually-hidden\" type=\"radio\" name=\"trip-sort\" value=\"sort-time\">\n              <label class=\"trip-sort__btn\" for=\"sort-time\">Time</label>\n            </div>\n\n            <div class=\"trip-sort__item  trip-sort__item--price\">\n              <input id=\"sort-price\" class=\"trip-sort__input  visually-hidden\" type=\"radio\" name=\"trip-sort\" value=\"sort-price\" checked>\n              <label class=\"trip-sort__btn\" for=\"sort-price\">Price</label>\n            </div>\n\n            <div class=\"trip-sort__item  trip-sort__item--offer\">\n              <input id=\"sort-offer\" class=\"trip-sort__input  visually-hidden\" type=\"radio\" name=\"trip-sort\" value=\"sort-offer\" disabled>\n              <label class=\"trip-sort__btn\" for=\"sort-offer\">Offers</label>\n            </div>\n          </form>`;\n\n\nexport default class PointSortView extends BaseView {\n  constructor(){\n    super();\n  }\n\n  get template() {\n    return createSortPointTemplate();\n  }\n\n}\n\n","import BaseView from '../render';\n\nconst createformFiltersTemplate = () => `\n\n            <div class=\"trip-controls__filters\">\n              <h2 class=\"visually-hidden\">Filter events</h2>\n              <form class=\"trip-filters\" action=\"#\" method=\"get\">\n                <div class=\"trip-filters__filter\">\n                  <input id=\"filter-everything\" class=\"trip-filters__filter-input  visually-hidden\" type=\"radio\" name=\"trip-filter\" value=\"everything\" checked=\"\">\n                  <label class=\"trip-filters__filter-label\" for=\"filter-everything\">Everything</label>\n                </div>\n\n                <div class=\"trip-filters__filter\">\n                  <input id=\"filter-future\" class=\"trip-filters__filter-input  visually-hidden\" type=\"radio\" name=\"trip-filter\" value=\"future\">\n                  <label class=\"trip-filters__filter-label\" for=\"filter-future\">Future</label>\n                </div>\n\n                <div class=\"trip-filters__filter\">\n                  <input id=\"filter-present\" class=\"trip-filters__filter-input  visually-hidden\" type=\"radio\" name=\"trip-filter\" value=\"present\">\n                  <label class=\"trip-filters__filter-label\" for=\"filter-present\">Present</label>\n                </div>\n\n                <div class=\"trip-filters__filter\">\n                  <input id=\"filter-past\" class=\"trip-filters__filter-input  visually-hidden\" type=\"radio\" name=\"trip-filter\" value=\"past\">\n                  <label class=\"trip-filters__filter-label\" for=\"filter-past\">Past</label>\n                </div>\n\n                <button class=\"visually-hidden\" type=\"submit\">Accept filter</button>\n              </form>\n            </div>\n          `;\n\n\nexport default class FilterView extends BaseView {\n  get template() {\n    return createformFiltersTemplate();\n  }\n}\n","\nconst mockDataPoints = [\n  {\n    id: 'f1',\n    basePrice: 1100,\n    dateFrom: '2019-07-10T22:55:56.845Z',\n    dateTo: '2019-07-11T11:22:13.375Z',\n    destination: 'bf5',\n    isFavorite: false,\n    offers: [\n      't1',\n      't2',\n      't5'\n    ],\n    type: 'taxi'\n  },\n  {\n    id: 'f2',\n    basePrice: 500,\n    dateFrom: '2019-07-13T22:55:56.845Z',\n    dateTo: '2019-07-15T11:22:13.375Z',\n    destination: 'cf2',\n    isFavorite: true,\n    offers: [\n      's1',\n      's2',\n    ],\n    type: 'ship'\n  },\n  {\n    id: 'f3',\n    basePrice: 12500,\n    dateFrom: '2019-07-13T22:55:56.845Z',\n    dateTo: '2019-07-15T11:22:13.375Z',\n    destination: 'fe2',\n    isFavorite: false,\n    offers: [],\n    type: 'flight'\n  }\n];\n\nfunction getRandomArrayElement(items) {\n  return items[Math.floor(Math.random() * items.length)];\n}\nfunction getRandomTask() {\n  return getRandomArrayElement(mockDataPoints);\n}\n\n\nexport { getRandomTask };\n","\nconst mockOffers = [\n  {\n    'type': 'taxi',\n    'offers': [\n      {\n        'id': 't1',\n        'title': 'Слушать свою музыку',\n        'price': 36\n      },\n      {\n        'id': 't2',\n        'title': 'Не пристегиваться',\n        'price': 128\n      },\n      {\n        'id': 't3',\n        'title': 'Кричать в окно ',\n        'price': 169\n      },\n      {\n        'id': 't4',\n        'title': 'Выпитьвать в машине',\n        'price': 57\n      },\n      {\n        'id': 't5',\n        'title': 'Поменяться с водителем местами',\n        'price': 470\n      }\n    ]\n  },\n  {\n    'type': 'ship',\n    'offers': [\n      {\n        'id': 's1',\n        'title': 'Choose meal',\n        'price': 191\n      },\n      {\n        'id': 's2',\n        'title': 'Choose seats',\n        'price': 78\n      },\n      {\n        'id': 's3',\n        'title': 'Upgrade to comfort class',\n        'price': 95\n      },\n      {\n        'id': 's4',\n        'title': 'Upgrade to business class',\n        'price': 84\n      },\n      {\n        'id': 's5',\n        'title': 'Add luggage',\n        'price': 98\n      },\n      {\n        'id': 's6',\n        'title': 'Business lounge',\n        'price': 175\n      }\n    ]\n  },\n];\n\n\nexport {mockOffers};\n","const mockDestinations = [\n  {\n    id: 'cf2',\n    description: 'Chamonix, is a beautiful city, a true asian pearl, with crowded streets.',\n    name: 'Chamonix',\n    pictures: [\n      {\n        src: 'https://random.onl/images/pictures/np31.jpg',\n        description: 'Chamonix parliament building'\n      },\n      {\n        src: 'https://random.onl/images/pictures/np31.jpg',\n        description: 'Chamonix parliament building'\n      },\n      {\n        src: 'https://random.onl/images/pictures/np31.jpg',\n        description: 'Chamonix parliament building'\n      },\n      {\n        src: 'https://random.onl/images/pictures/np31.jpg',\n        description: 'Chamonix parliament building'\n      }\n    ]\n  },\n  {\n    id: 'bf5',\n    description: 'Moscow, is a beautiful city, a true asian pearl, with crowded streets.',\n    name: 'Moscow',\n    pictures: [\n      {\n        src: 'https://via.assets.so/game.jpg?w=1280&h=720',\n        description: 'Moscow parliament building'\n      },\n      {\n        src: 'https://via.assets.so/game.jpg?w=1280&h=720',\n        description: 'Moscow parliament building'\n      },\n    ]\n  },\n];\n\nexport { mockDestinations };\n","import TripPresenter from './presenter/trip-presenter.js';\nimport PointModel from './model/event-model';\nimport '../src/view/edit-form-view.js';\n\n\nconst eventsContainer = document.querySelector('.trip-events');\n\nconst pointsModel = new PointModel();\n\nconst configModel = {\n  boardContainer: eventsContainer,\n  pointsModel\n};\n\nconst tripPresenter = new TripPresenter(configModel);\n\ntripPresenter.getHeaderComponent();\ntripPresenter.getSortPoint();\ntripPresenter.init();\n","import { getRandomTask } from '../mock/mock-point-data.js';\nimport { mockOffers } from '../mock/mock-offers-data.js';\nimport {mockDestinations} from '../mock/mock-destinations-data.js';\n\nexport default class PointModel {\n  #offersData = mockOffers;\n  #pointData = Array.from({ length: 3 }, getRandomTask);\n  #destinationsData = mockDestinations;\n\n\n  get points() {\n    return this.#pointData;\n  }\n\n  get offers() {\n    return this.#offersData;\n  }\n\n  get destinations(){\n    return this.#destinationsData;\n\n  }\n}\n","import { eventsContainerElement, tripControlsElement } from '../const';\nimport { render } from '../render';\nimport EventItemView from '../view/trip-events-item';\nimport EventListView from '../view/trip-events-list';\nimport EditEventView from '../view/edit-form-view';\nimport PointSortView from '../view/point-sort';\nimport FilterView from '../view/point-filters';\n\nexport default class TripPresenter {\n  pointList = new EventListView();\n  constructor({boardContainer, pointsModel}){\n    this.boardContainer = boardContainer;\n    this.pointsModel = pointsModel;\n  }\n\n  init(){\n    this.boardPoints = [...this.pointsModel.points];\n    this.boardOffers = [...this.pointsModel.offers];\n    this.boardDestinations = [...this.pointsModel.destinations];\n\n\n    render(this.pointList, eventsContainerElement);\n\n    const editPointView = new EditEventView({\n      point : this.boardPoints[0],\n      offers: this.boardOffers,\n      destinations : this.boardDestinations,\n    });\n\n    render(editPointView, this.pointList.getElement());\n\n    for (let i = 1; i < this.boardPoints.length; i++) {\n      const eventItemView = new EventItemView({\n        point: this.boardPoints[i],\n        offers: this.boardOffers\n      });\n\n      render(eventItemView, this.pointList.getElement());\n\n    }\n  }\n\n  getSortPoint(){\n    return render(new PointSortView, eventsContainerElement);\n  }\n\n  getHeaderComponent(){\n    render(new FilterView, tripControlsElement);\n  }\n\n}\n\n"],"names":["POINT_TYPES","CITIES","eventsContainerElement","document","querySelector","tripControlsElement","render","component","container","place","insertAdjacentElement","getElement","BaseView","this","element","template","newElement","createElement","innerHTML","firstElementChild","EventItemView","constructor","point","offers","super","createRoutePoint","type","basePrice","isFavorite","favoriteClassName","offersItem","createOffersTemplate","mockPoint","mockOffers","pointTypeOffer","find","offer","pointeOfferKey","Set","filter","has","id","map","title","price","renderOffer","join","EventListView","EditPointView","destinations","editPoint","eventTypeItem","citie","offerComponent","createEditOffersTemplate","renderOfferEdit","includes","destinationComponent","createEditDestinationsTemplate","mockDestinations","destination","description","pictures","picture","src","renderDescription","PointSortView","FilterView","mockDataPoints","dateFrom","dateTo","getRandomTask","items","Math","floor","random","length","name","configModel","boardContainer","pointsModel","Array","from","points","tripPresenter","pointList","init","boardPoints","boardOffers","boardDestinations","EditEventView","i","getSortPoint","getHeaderComponent"],"sourceRoot":""}